// Generated from MiniGo.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniGoLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__23=1, T__22=2, T__21=3, T__20=4, T__19=5, T__18=6, T__17=7, T__16=8, 
		T__15=9, T__14=10, T__13=11, T__12=12, T__11=13, T__10=14, T__9=15, T__8=16, 
		T__7=17, T__6=18, T__5=19, T__4=20, T__3=21, T__2=22, T__1=23, T__0=24, 
		STACK=25, VOID=26, VAR=27, FUNC=28, FMT=29, INT=30, BOOL=31, FOR=32, IF=33, 
		ELSE=34, RETURN=35, OR=36, AND=37, LE=38, GE=39, EQ=40, NE=41, IDENT=42, 
		LITERAL=43, DecimalConstant=44, OctalConstant=45, HexadecimalConstant=46, 
		WS=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'"
	};
	public static final String[] ruleNames = {
		"T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", 
		"T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", 
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "STACK", 
		"VOID", "VAR", "FUNC", "FMT", "INT", "BOOL", "FOR", "IF", "ELSE", "RETURN", 
		"OR", "AND", "LE", "GE", "EQ", "NE", "IDENT", "LITERAL", "DecimalConstant", 
		"OctalConstant", "HexadecimalConstant", "WS"
	};


	public MiniGoLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniGo.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\61\u0119\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b"+
		"\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37"+
		"\3 \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$"+
		"\3$\3$\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+"+
		"\3+\7+\u00f1\n+\f+\16+\u00f4\13+\3,\3,\3,\5,\u00f9\n,\3-\3-\3-\7-\u00fe"+
		"\n-\f-\16-\u0101\13-\5-\u0103\n-\3.\3.\7.\u0107\n.\f.\16.\u010a\13.\3"+
		"/\3/\3/\6/\u010f\n/\r/\16/\u0110\3\60\6\60\u0114\n\60\r\60\16\60\u0115"+
		"\3\60\3\60\2\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31"+
		"\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65"+
		"\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61\3\2\n\5\2"+
		"C\\aac|\6\2\62;C\\aac|\3\2\63;\3\2\62;\3\2\629\4\2ZZzz\5\2\62;CHch\5\2"+
		"\13\f\17\17\"\"\u0120\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3"+
		"\2\2\2\2_\3\2\2\2\3a\3\2\2\2\5c\3\2\2\2\7j\3\2\2\2\tp\3\2\2\2\13u\3\2"+
		"\2\2\rw\3\2\2\2\17y\3\2\2\2\21|\3\2\2\2\23\177\3\2\2\2\25\u0081\3\2\2"+
		"\2\27\u0083\3\2\2\2\31\u0085\3\2\2\2\33\u0087\3\2\2\2\35\u0089\3\2\2\2"+
		"\37\u008f\3\2\2\2!\u0091\3\2\2\2#\u0093\3\2\2\2%\u0099\3\2\2\2\'\u009b"+
		"\3\2\2\2)\u009d\3\2\2\2+\u009f\3\2\2\2-\u00a1\3\2\2\2/\u00a3\3\2\2\2\61"+
		"\u00a5\3\2\2\2\63\u00a7\3\2\2\2\65\u00ad\3\2\2\2\67\u00b2\3\2\2\29\u00b6"+
		"\3\2\2\2;\u00bb\3\2\2\2=\u00bf\3\2\2\2?\u00c3\3\2\2\2A\u00c8\3\2\2\2C"+
		"\u00cc\3\2\2\2E\u00cf\3\2\2\2G\u00d4\3\2\2\2I\u00db\3\2\2\2K\u00de\3\2"+
		"\2\2M\u00e2\3\2\2\2O\u00e5\3\2\2\2Q\u00e8\3\2\2\2S\u00eb\3\2\2\2U\u00ee"+
		"\3\2\2\2W\u00f8\3\2\2\2Y\u0102\3\2\2\2[\u0104\3\2\2\2]\u010b\3\2\2\2_"+
		"\u0113\3\2\2\2ab\7\61\2\2b\4\3\2\2\2cd\7\60\2\2de\7g\2\2ef\7o\2\2fg\7"+
		"r\2\2gh\7v\2\2hi\7{\2\2i\6\3\2\2\2jk\7\60\2\2kl\7r\2\2lm\7w\2\2mn\7u\2"+
		"\2no\7j\2\2o\b\3\2\2\2pq\7\60\2\2qr\7r\2\2rs\7q\2\2st\7r\2\2t\n\3\2\2"+
		"\2uv\7}\2\2v\f\3\2\2\2wx\7]\2\2x\16\3\2\2\2yz\7-\2\2z{\7-\2\2{\20\3\2"+
		"\2\2|}\7/\2\2}~\7/\2\2~\22\3\2\2\2\177\u0080\7>\2\2\u0080\24\3\2\2\2\u0081"+
		"\u0082\7\177\2\2\u0082\26\3\2\2\2\u0083\u0084\7?\2\2\u0084\30\3\2\2\2"+
		"\u0085\u0086\7_\2\2\u0086\32\3\2\2\2\u0087\u0088\7@\2\2\u0088\34\3\2\2"+
		"\2\u0089\u008a\7\60\2\2\u008a\u008b\7r\2\2\u008b\u008c\7g\2\2\u008c\u008d"+
		"\7g\2\2\u008d\u008e\7m\2\2\u008e\36\3\2\2\2\u008f\u0090\7#\2\2\u0090 "+
		"\3\2\2\2\u0091\u0092\7\'\2\2\u0092\"\3\2\2\2\u0093\u0094\7\60\2\2\u0094"+
		"\u0095\7u\2\2\u0095\u0096\7k\2\2\u0096\u0097\7|\2\2\u0097\u0098\7g\2\2"+
		"\u0098$\3\2\2\2\u0099\u009a\7*\2\2\u009a&\3\2\2\2\u009b\u009c\7+\2\2\u009c"+
		"(\3\2\2\2\u009d\u009e\7,\2\2\u009e*\3\2\2\2\u009f\u00a0\7-\2\2\u00a0,"+
		"\3\2\2\2\u00a1\u00a2\7.\2\2\u00a2.\3\2\2\2\u00a3\u00a4\7/\2\2\u00a4\60"+
		"\3\2\2\2\u00a5\u00a6\7\60\2\2\u00a6\62\3\2\2\2\u00a7\u00a8\7u\2\2\u00a8"+
		"\u00a9\7v\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab\7e\2\2\u00ab\u00ac\7m\2\2"+
		"\u00ac\64\3\2\2\2\u00ad\u00ae\7x\2\2\u00ae\u00af\7q\2\2\u00af\u00b0\7"+
		"k\2\2\u00b0\u00b1\7f\2\2\u00b1\66\3\2\2\2\u00b2\u00b3\7x\2\2\u00b3\u00b4"+
		"\7c\2\2\u00b4\u00b5\7t\2\2\u00b58\3\2\2\2\u00b6\u00b7\7h\2\2\u00b7\u00b8"+
		"\7w\2\2\u00b8\u00b9\7p\2\2\u00b9\u00ba\7e\2\2\u00ba:\3\2\2\2\u00bb\u00bc"+
		"\7h\2\2\u00bc\u00bd\7o\2\2\u00bd\u00be\7v\2\2\u00be<\3\2\2\2\u00bf\u00c0"+
		"\7k\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2\7v\2\2\u00c2>\3\2\2\2\u00c3\u00c4"+
		"\7d\2\2\u00c4\u00c5\7q\2\2\u00c5\u00c6\7q\2\2\u00c6\u00c7\7n\2\2\u00c7"+
		"@\3\2\2\2\u00c8\u00c9\7h\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cb\7t\2\2\u00cb"+
		"B\3\2\2\2\u00cc\u00cd\7k\2\2\u00cd\u00ce\7h\2\2\u00ceD\3\2\2\2\u00cf\u00d0"+
		"\7g\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2\7u\2\2\u00d2\u00d3\7g\2\2\u00d3"+
		"F\3\2\2\2\u00d4\u00d5\7t\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7v\2\2\u00d7"+
		"\u00d8\7w\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7p\2\2\u00daH\3\2\2\2\u00db"+
		"\u00dc\7q\2\2\u00dc\u00dd\7t\2\2\u00ddJ\3\2\2\2\u00de\u00df\7c\2\2\u00df"+
		"\u00e0\7p\2\2\u00e0\u00e1\7f\2\2\u00e1L\3\2\2\2\u00e2\u00e3\7>\2\2\u00e3"+
		"\u00e4\7?\2\2\u00e4N\3\2\2\2\u00e5\u00e6\7@\2\2\u00e6\u00e7\7?\2\2\u00e7"+
		"P\3\2\2\2\u00e8\u00e9\7?\2\2\u00e9\u00ea\7?\2\2\u00eaR\3\2\2\2\u00eb\u00ec"+
		"\7#\2\2\u00ec\u00ed\7?\2\2\u00edT\3\2\2\2\u00ee\u00f2\t\2\2\2\u00ef\u00f1"+
		"\t\3\2\2\u00f0\u00ef\3\2\2\2\u00f1\u00f4\3\2\2\2\u00f2\u00f0\3\2\2\2\u00f2"+
		"\u00f3\3\2\2\2\u00f3V\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f5\u00f9\5Y-\2\u00f6"+
		"\u00f9\5[.\2\u00f7\u00f9\5]/\2\u00f8\u00f5\3\2\2\2\u00f8\u00f6\3\2\2\2"+
		"\u00f8\u00f7\3\2\2\2\u00f9X\3\2\2\2\u00fa\u0103\7\62\2\2\u00fb\u00ff\t"+
		"\4\2\2\u00fc\u00fe\t\5\2\2\u00fd\u00fc\3\2\2\2\u00fe\u0101\3\2\2\2\u00ff"+
		"\u00fd\3\2\2\2\u00ff\u0100\3\2\2\2\u0100\u0103\3\2\2\2\u0101\u00ff\3\2"+
		"\2\2\u0102\u00fa\3\2\2\2\u0102\u00fb\3\2\2\2\u0103Z\3\2\2\2\u0104\u0108"+
		"\7\62\2\2\u0105\u0107\t\6\2\2\u0106\u0105\3\2\2\2\u0107\u010a\3\2\2\2"+
		"\u0108\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\\\3\2\2\2\u010a\u0108\3"+
		"\2\2\2\u010b\u010c\7\62\2\2\u010c\u010e\t\7\2\2\u010d\u010f\t\b\2\2\u010e"+
		"\u010d\3\2\2\2\u010f\u0110\3\2\2\2\u0110\u010e\3\2\2\2\u0110\u0111\3\2"+
		"\2\2\u0111^\3\2\2\2\u0112\u0114\t\t\2\2\u0113\u0112\3\2\2\2\u0114\u0115"+
		"\3\2\2\2\u0115\u0113\3\2\2\2\u0115\u0116\3\2\2\2\u0116\u0117\3\2\2\2\u0117"+
		"\u0118\b\60\2\2\u0118`\3\2\2\2\13\2\u00f0\u00f2\u00f8\u00ff\u0102\u0108"+
		"\u0110\u0115\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}