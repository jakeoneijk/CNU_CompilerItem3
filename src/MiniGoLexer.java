// Generated from MiniGo.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniGoLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__18=1, T__17=2, T__16=3, T__15=4, T__14=5, T__13=6, T__12=7, T__11=8, 
		T__10=9, T__9=10, T__8=11, T__7=12, T__6=13, T__5=14, T__4=15, T__3=16, 
		T__2=17, T__1=18, T__0=19, POLLD=20, PEEKD=21, SIZED=22, EMPTYD=23, PUSHD=24, 
		PUSHS=25, POPS=26, PEEKS=27, SIZES=28, EMPTYS=29, QUEUE=30, STACK=31, 
		VOID=32, VAR=33, FUNC=34, FMT=35, INT=36, BOOL=37, FOR=38, IF=39, ELSE=40, 
		RETURN=41, OR=42, AND=43, LE=44, GE=45, EQ=46, NE=47, IDENT=48, LITERAL=49, 
		DecimalConstant=50, OctalConstant=51, HexadecimalConstant=52, WS=53;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'"
	};
	public static final String[] ruleNames = {
		"T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", 
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "POLLD", "PEEKD", "SIZED", "EMPTYD", "PUSHD", "PUSHS", 
		"POPS", "PEEKS", "SIZES", "EMPTYS", "QUEUE", "STACK", "VOID", "VAR", "FUNC", 
		"FMT", "INT", "BOOL", "FOR", "IF", "ELSE", "RETURN", "OR", "AND", "LE", 
		"GE", "EQ", "NE", "IDENT", "LITERAL", "DecimalConstant", "OctalConstant", 
		"HexadecimalConstant", "WS"
	};


	public MiniGoLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniGo.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\67\u0148\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6"+
		"\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3"+
		"\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3"+
		"\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3"+
		"\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3"+
		"!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3"+
		"&\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3+\3"+
		"+\3,\3,\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\7\61"+
		"\u0120\n\61\f\61\16\61\u0123\13\61\3\62\3\62\3\62\5\62\u0128\n\62\3\63"+
		"\3\63\3\63\7\63\u012d\n\63\f\63\16\63\u0130\13\63\5\63\u0132\n\63\3\64"+
		"\3\64\7\64\u0136\n\64\f\64\16\64\u0139\13\64\3\65\3\65\3\65\6\65\u013e"+
		"\n\65\r\65\16\65\u013f\3\66\6\66\u0143\n\66\r\66\16\66\u0144\3\66\3\66"+
		"\2\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17"+
		"\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\35"+
		"9\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66"+
		"k\67\3\2\n\5\2C\\aac|\6\2\62;C\\aac|\3\2\63;\3\2\62;\3\2\629\4\2ZZzz\5"+
		"\2\62;CHch\5\2\13\f\17\17\"\"\u014f\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2"+
		"\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23"+
		"\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2"+
		"\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2"+
		"\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3"+
		"\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2"+
		"\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2"+
		"\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2["+
		"\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2"+
		"\2\2\2i\3\2\2\2\2k\3\2\2\2\3m\3\2\2\2\5o\3\2\2\2\7q\3\2\2\2\ts\3\2\2\2"+
		"\13v\3\2\2\2\ry\3\2\2\2\17{\3\2\2\2\21}\3\2\2\2\23\177\3\2\2\2\25\u0081"+
		"\3\2\2\2\27\u0083\3\2\2\2\31\u0085\3\2\2\2\33\u0087\3\2\2\2\35\u0089\3"+
		"\2\2\2\37\u008b\3\2\2\2!\u008d\3\2\2\2#\u008f\3\2\2\2%\u0091\3\2\2\2\'"+
		"\u0093\3\2\2\2)\u0095\3\2\2\2+\u009a\3\2\2\2-\u00a0\3\2\2\2/\u00a6\3\2"+
		"\2\2\61\u00ad\3\2\2\2\63\u00b3\3\2\2\2\65\u00b9\3\2\2\2\67\u00bd\3\2\2"+
		"\29\u00c3\3\2\2\2;\u00c9\3\2\2\2=\u00d0\3\2\2\2?\u00d6\3\2\2\2A\u00dc"+
		"\3\2\2\2C\u00e1\3\2\2\2E\u00e5\3\2\2\2G\u00ea\3\2\2\2I\u00ee\3\2\2\2K"+
		"\u00f2\3\2\2\2M\u00f7\3\2\2\2O\u00fb\3\2\2\2Q\u00fe\3\2\2\2S\u0103\3\2"+
		"\2\2U\u010a\3\2\2\2W\u010d\3\2\2\2Y\u0111\3\2\2\2[\u0114\3\2\2\2]\u0117"+
		"\3\2\2\2_\u011a\3\2\2\2a\u011d\3\2\2\2c\u0127\3\2\2\2e\u0131\3\2\2\2g"+
		"\u0133\3\2\2\2i\u013a\3\2\2\2k\u0142\3\2\2\2mn\7\61\2\2n\4\3\2\2\2op\7"+
		"}\2\2p\6\3\2\2\2qr\7]\2\2r\b\3\2\2\2st\7-\2\2tu\7-\2\2u\n\3\2\2\2vw\7"+
		"/\2\2wx\7/\2\2x\f\3\2\2\2yz\7>\2\2z\16\3\2\2\2{|\7\177\2\2|\20\3\2\2\2"+
		"}~\7?\2\2~\22\3\2\2\2\177\u0080\7_\2\2\u0080\24\3\2\2\2\u0081\u0082\7"+
		"@\2\2\u0082\26\3\2\2\2\u0083\u0084\7#\2\2\u0084\30\3\2\2\2\u0085\u0086"+
		"\7\'\2\2\u0086\32\3\2\2\2\u0087\u0088\7*\2\2\u0088\34\3\2\2\2\u0089\u008a"+
		"\7+\2\2\u008a\36\3\2\2\2\u008b\u008c\7,\2\2\u008c \3\2\2\2\u008d\u008e"+
		"\7-\2\2\u008e\"\3\2\2\2\u008f\u0090\7.\2\2\u0090$\3\2\2\2\u0091\u0092"+
		"\7/\2\2\u0092&\3\2\2\2\u0093\u0094\7\60\2\2\u0094(\3\2\2\2\u0095\u0096"+
		"\7r\2\2\u0096\u0097\7q\2\2\u0097\u0098\7n\2\2\u0098\u0099\7n\2\2\u0099"+
		"*\3\2\2\2\u009a\u009b\7r\2\2\u009b\u009c\7g\2\2\u009c\u009d\7g\2\2\u009d"+
		"\u009e\7m\2\2\u009e\u009f\7f\2\2\u009f,\3\2\2\2\u00a0\u00a1\7u\2\2\u00a1"+
		"\u00a2\7k\2\2\u00a2\u00a3\7|\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7f\2\2"+
		"\u00a5.\3\2\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7o\2\2\u00a8\u00a9\7r\2"+
		"\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7{\2\2\u00ab\u00ac\7f\2\2\u00ac\60\3"+
		"\2\2\2\u00ad\u00ae\7r\2\2\u00ae\u00af\7w\2\2\u00af\u00b0\7u\2\2\u00b0"+
		"\u00b1\7j\2\2\u00b1\u00b2\7f\2\2\u00b2\62\3\2\2\2\u00b3\u00b4\7r\2\2\u00b4"+
		"\u00b5\7w\2\2\u00b5\u00b6\7u\2\2\u00b6\u00b7\7j\2\2\u00b7\u00b8\7u\2\2"+
		"\u00b8\64\3\2\2\2\u00b9\u00ba\7r\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7"+
		"r\2\2\u00bc\66\3\2\2\2\u00bd\u00be\7r\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0"+
		"\7g\2\2\u00c0\u00c1\7m\2\2\u00c1\u00c2\7u\2\2\u00c28\3\2\2\2\u00c3\u00c4"+
		"\7u\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7|\2\2\u00c6\u00c7\7g\2\2\u00c7"+
		"\u00c8\7u\2\2\u00c8:\3\2\2\2\u00c9\u00ca\7g\2\2\u00ca\u00cb\7o\2\2\u00cb"+
		"\u00cc\7r\2\2\u00cc\u00cd\7v\2\2\u00cd\u00ce\7{\2\2\u00ce\u00cf\7u\2\2"+
		"\u00cf<\3\2\2\2\u00d0\u00d1\7S\2\2\u00d1\u00d2\7w\2\2\u00d2\u00d3\7g\2"+
		"\2\u00d3\u00d4\7w\2\2\u00d4\u00d5\7g\2\2\u00d5>\3\2\2\2\u00d6\u00d7\7"+
		"U\2\2\u00d7\u00d8\7v\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7e\2\2\u00da\u00db"+
		"\7m\2\2\u00db@\3\2\2\2\u00dc\u00dd\7x\2\2\u00dd\u00de\7q\2\2\u00de\u00df"+
		"\7k\2\2\u00df\u00e0\7f\2\2\u00e0B\3\2\2\2\u00e1\u00e2\7x\2\2\u00e2\u00e3"+
		"\7c\2\2\u00e3\u00e4\7t\2\2\u00e4D\3\2\2\2\u00e5\u00e6\7h\2\2\u00e6\u00e7"+
		"\7w\2\2\u00e7\u00e8\7p\2\2\u00e8\u00e9\7e\2\2\u00e9F\3\2\2\2\u00ea\u00eb"+
		"\7h\2\2\u00eb\u00ec\7o\2\2\u00ec\u00ed\7v\2\2\u00edH\3\2\2\2\u00ee\u00ef"+
		"\7k\2\2\u00ef\u00f0\7p\2\2\u00f0\u00f1\7v\2\2\u00f1J\3\2\2\2\u00f2\u00f3"+
		"\7d\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5\7q\2\2\u00f5\u00f6\7n\2\2\u00f6"+
		"L\3\2\2\2\u00f7\u00f8\7h\2\2\u00f8\u00f9\7q\2\2\u00f9\u00fa\7t\2\2\u00fa"+
		"N\3\2\2\2\u00fb\u00fc\7k\2\2\u00fc\u00fd\7h\2\2\u00fdP\3\2\2\2\u00fe\u00ff"+
		"\7g\2\2\u00ff\u0100\7n\2\2\u0100\u0101\7u\2\2\u0101\u0102\7g\2\2\u0102"+
		"R\3\2\2\2\u0103\u0104\7t\2\2\u0104\u0105\7g\2\2\u0105\u0106\7v\2\2\u0106"+
		"\u0107\7w\2\2\u0107\u0108\7t\2\2\u0108\u0109\7p\2\2\u0109T\3\2\2\2\u010a"+
		"\u010b\7q\2\2\u010b\u010c\7t\2\2\u010cV\3\2\2\2\u010d\u010e\7c\2\2\u010e"+
		"\u010f\7p\2\2\u010f\u0110\7f\2\2\u0110X\3\2\2\2\u0111\u0112\7>\2\2\u0112"+
		"\u0113\7?\2\2\u0113Z\3\2\2\2\u0114\u0115\7@\2\2\u0115\u0116\7?\2\2\u0116"+
		"\\\3\2\2\2\u0117\u0118\7?\2\2\u0118\u0119\7?\2\2\u0119^\3\2\2\2\u011a"+
		"\u011b\7#\2\2\u011b\u011c\7?\2\2\u011c`\3\2\2\2\u011d\u0121\t\2\2\2\u011e"+
		"\u0120\t\3\2\2\u011f\u011e\3\2\2\2\u0120\u0123\3\2\2\2\u0121\u011f\3\2"+
		"\2\2\u0121\u0122\3\2\2\2\u0122b\3\2\2\2\u0123\u0121\3\2\2\2\u0124\u0128"+
		"\5e\63\2\u0125\u0128\5g\64\2\u0126\u0128\5i\65\2\u0127\u0124\3\2\2\2\u0127"+
		"\u0125\3\2\2\2\u0127\u0126\3\2\2\2\u0128d\3\2\2\2\u0129\u0132\7\62\2\2"+
		"\u012a\u012e\t\4\2\2\u012b\u012d\t\5\2\2\u012c\u012b\3\2\2\2\u012d\u0130"+
		"\3\2\2\2\u012e\u012c\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u0132\3\2\2\2\u0130"+
		"\u012e\3\2\2\2\u0131\u0129\3\2\2\2\u0131\u012a\3\2\2\2\u0132f\3\2\2\2"+
		"\u0133\u0137\7\62\2\2\u0134\u0136\t\6\2\2\u0135\u0134\3\2\2\2\u0136\u0139"+
		"\3\2\2\2\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138h\3\2\2\2\u0139"+
		"\u0137\3\2\2\2\u013a\u013b\7\62\2\2\u013b\u013d\t\7\2\2\u013c\u013e\t"+
		"\b\2\2\u013d\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u013d\3\2\2\2\u013f"+
		"\u0140\3\2\2\2\u0140j\3\2\2\2\u0141\u0143\t\t\2\2\u0142\u0141\3\2\2\2"+
		"\u0143\u0144\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0146"+
		"\3\2\2\2\u0146\u0147\b\66\2\2\u0147l\3\2\2\2\13\2\u011f\u0121\u0127\u012e"+
		"\u0131\u0137\u013f\u0144\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}